import telebot;
import utils
import sqlalchemy
from telebot import types
import pickle
import Gaming
import education
import time
bot = telebot.TeleBot('1293857426:AAFY2TmAg1X_mmqv9Mp01TDhCXUZGS9MOL0');

@bot.message_handler(commands=["start"])
def send_start(message):
    session = utils.simpleSession(message.chat.id)
    utils.sessions[message.chat.id] = session
    output = open('data.pkl', 'wb')
    pickle.dump(utils.sessions, output, 2)
    output.close()
    button1 = types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏–º –∑–Ω–∞–Ω–∏—è! üë®‚Äçüéì", callback_data="start_educ")
    button2 = types.InlineKeyboardButton(text="–ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ –æ–±—É—á–µ–Ω–∏—é! üìö", callback_data="skip_educ")
    keyboard1 = types.InlineKeyboardMarkup()
    keyboard1.add(button1)
    keyboard1.add(button2)
    session.start_wait = True
    bot.send_photo(message.chat.id, open("C:\\Users\\–î–∏–º–∞\\PycharmProjects\\pythonProject1\\5.png", 'rb'),reply_markup=keyboard1)

@bot.callback_query_handler(func=lambda c: c.data)
def pages(c):
    try:
        session = utils.sessions[c.message.chat.id]
    except Exception:
        session = utils.simpleSession(c.message.chat.id)
        utils.sessions[c.message.chat.id] = session
    if c.data == "true" and session.first_test == True:
        if session.question_number <= 8:
            if session.question_number == 8:
                session.points_1[session.question_number-1] += 1
                session.first_test = False
                bot.send_message(c.message.chat.id,
                                 "–ü–æ —Å–ª–µ–¥—É—é—â–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª—ã –≤ –∑–Ω–∞–Ω–∏—è—Ö!\n–ü–µ—Ä–µ–π–¥–µ–º –∫ –æ–±—É—á–µ–Ω–∏—é?",
                                 parse_mode='Markdown')

                education.iswinner(bot, session, c.message)
            else:
                session.points_1[session.question_number - 1] += 1
                Gaming.first_exam(bot,session,c.message)

        else:
            session.first_test = False
            bot.send_message(c.message.chat.id,
                             "–ü–æ —Å–ª–µ–¥—É—é—â–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª—ã –≤ –∑–Ω–∞–Ω–∏—è—Ö!\n–ü–µ—Ä–µ–π–¥–µ–º –∫ –æ–±—É—á–µ–Ω–∏—é?",
                             parse_mode='Markdown')

            education.iswinner(bot, session, c.message)
    if c.data == "false" and session.first_test == True:
        if session.question_number < 8:
            Gaming.first_exam(bot,session,c.message)
        else:
            session.first_test = False
            bot.send_message(c.message.chat.id,"–ü–æ —Å–ª–µ–¥—É—é—â–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª—ã –≤ –∑–Ω–∞–Ω–∏—è—Ö!\n–ü–µ—Ä–µ–π–¥–µ–º –∫ –æ–±—É—á–µ–Ω–∏—é?", parse_mode='Markdown')
            education.iswinner(bot,session,c.message)
    if c.data == "start_educ" and session.start_wait == True:
        session.start_wait = False
        bot.send_message(c.message.chat.id, "–î–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º!", parse_mode='Markdown')
        Gaming.first_exam(bot, session,c.message)
    #–ø—Ä–æ–ø—É—Å—Ç–∏–º –æ–±—É—á–µ–Ω–∏–µ#
    if c.data == "skip_educ":
        education.iswinner(bot, session, c.message)
        session.start_wait = False
    #–î–∞–ª–µ–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    #cat1
    if c.data == "cat1" and session.start_wait == False:
        education.teach_cat1_preview(bot,session,c.message)
    if c.data == "teach_cat1_start" and session.start_wait == False:
        education.teach_cat1_1(bot,session,c.message)
    if c.data == "teach_cat1_true_1" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ!", parse_mode='Markdown')
        time.sleep(5)
        education.teach_cat1_2(bot, session, c.message)
        session.points_1[0]=1
    if c.data == "teach_cat1_true_2" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–ù–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏—à–∏–Ω–≥–æ–º. –í—Å—ë –≤–µ—Ä–Ω–æ!", parse_mode='Markdown')
        time.sleep(5)
        session.points_1[1] = 1
        education.iswinner(bot,session,c.message)
    if c.data == "teach_cat1_false_1" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–ù–µ —Ñ–∏—à–∏–Ω–≥\n–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π!\n ‚ùó–û—Ç –°–±–µ—Ä–±–∞–Ω–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç —Å –µ–¥–∏–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ 900 –∏–ª–∏ 9000\n‚ùó–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ, –æ–¥–Ω–∞–∫–æ –ø—Ä–∏—à–ª–æ –Ω–µ —Å –Ω–æ–º–µ—Ä–∞ 900 –∏–ª–∏ 9000\n‚ùó–°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –ø—Ä–∏—à–ª–æ —Å —Ç–æ–≥–æ –∂–µ –Ω–æ–º–µ—Ä–∞, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—à–ª–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Å—á–µ—Ç. –û–ø–µ—Ä–∞—Ü–∏—è —è–≤–Ω–æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∞—è", parse_mode='Markdown')
        time.sleep(8)
        education.teach_cat1_2(bot, session, c.message)
        session.points_1[0] = 1
    if c.data == "teach_cat1_false_2" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–§–∏—à–∏–Ω–≥\n–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π!\n‚ùó–≠—Ç–æ –Ω–µ —Ñ–∏—à–∏–Ω–≥. –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –µ–¥–∏–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –°–±–µ—Ä–±–∞–Ω–∫–∞ 900", parse_mode='Markdown')
        session.points_1[1] = 1
        education.iswinner(bot, session, c.message)
    #cat2
    if c.data == "cat2" and session.start_wait == False:
        education.teach_cat2_preview(bot,session,c.message)
    if c.data == "teach_cat2_start" and session.start_wait == False:
        education.teach_cat2_1(bot,session,c.message)
    if c.data == "teach_cat2_true_1" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ!", parse_mode='Markdown')
        time.sleep(5)
        education.teach_cat2_2(bot, session, c.message)
        session.points_1[2]=1
    if c.data == "teach_cat2_true_2" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–§–∏—à–∏–Ω–≥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –í—Å—ë –≤–µ—Ä–Ω–æ!", parse_mode='Markdown')
        time.sleep(5)
        session.points_1[3] = 1
        education.iswinner(bot,session,c.message)
    if c.data == "teach_cat2_false_1" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–ù–µ —Ñ–∏—à–∏–Ω–≥\n–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π!\n‚ùó–ó–≤–æ–Ω–æ–∫ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –æ—Ç –Ω–æ–º–µ—Ä–∞ –±–∞–Ω–∫–∞\n‚ùó–†–∞–±–æ—Ç–Ω–∏–∫–∏ –ë–∞–Ω–∫–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç –¥–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∫–∞—Ä—Ç, –Ω–µ –∑–≤–æ–Ω—è—Ç, —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å –æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–µ", parse_mode='Markdown')
        time.sleep(8)
        education.teach_cat2_2(bot, session, c.message)
        session.points_1[2] = 1
    if c.data == "teach_cat2_false_2" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–ù–µ —Ñ–∏—à–∏–Ω–≥\n–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π!\n‚ùó–ó–≤–æ–Ω–æ–∫ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –æ—Ç –Ω–æ–º–µ—Ä–∞ –±–∞–Ω–∫–∞\n–†–∞–±–æ—Ç–Ω–∏–∫–∏ –ë–∞–Ω–∫–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç –¥–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∫–∞—Ä—Ç, –Ω–µ –∑–≤–æ–Ω—è—Ç, —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å –æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–µ", parse_mode='Markdown')
        session.points_1[3] = 1
        education.iswinner(bot, session, c.message)
    #cat3
    if c.data == "cat3" and session.start_wait == False:
        education.teach_cat3_preview(bot,session,c.message)
    if c.data == "teach_cat3_start" and session.start_wait == False:
        education.teach_cat3_1(bot,session,c.message)
    if c.data == "teach_cat3_true_1" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–ù–µ —Å—Ç–∞–Ω—É –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ. –í—Å—ë –≤–µ—Ä–Ω–æ!", parse_mode='Markdown')
        time.sleep(5)
        education.teach_cat3_2(bot, session, c.message)
        session.points_1[4]=1
    if c.data == "teach_cat3_true_2" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–§–∏—à–∏–Ω–≥. –í—Å—ë –≤–µ—Ä–Ω–æ!", parse_mode='Markdown')
        time.sleep(5)
        session.points_1[5] = 1
        education.iswinner(bot,session,c.message)
    if c.data == "teach_cat3_false_1" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–ö–æ–Ω–µ—á–Ω–æ, –∫–ª–∏–∫–Ω—É, –∏ –æ—Ç–ø—Ä–∞–≤–ª—é –≤ –æ—Ç–≤–µ—Ç –¥—Ä—É–≥—É—é –æ—Ç–∫—Ä—ã—Ç–∫—É. \n–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π!\n‚ùó–≠—Ç–æ —Ñ–∏—à–∏–Ω–≥! –ò–Ω–æ–≥–¥–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏, —á—Ç–æ–±—ã –æ–±–º–∞–Ω—É—Ç—å –Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –¢–µ–∫—Å—Ç, –≤—ã–≥–ª—è–¥—è—â–∏–π –∫–∞–∫ —Å—Å—ã–ª–∫–∞, –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤–µ–¥–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–π —Å–∞–π—Ç!", parse_mode='Markdown')
        time.sleep(8)
        education.teach_cat3_2(bot, session, c.message)
        session.points_1[4] = 1
    if c.data == "teach_cat3_false_2" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–ù–µ —Ñ–∏—à–∏–Ω–≥\n–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π!\n‚ùó–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞, –∞ –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏–º–µ–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –≤–∏–¥ –∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏–º–µ–Ω–µ–º.\n‚ùó–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–¥–ø–∏—Å–∏", parse_mode='Markdown')
        session.points_1[5] = 1
        education.iswinner(bot, session, c.message)
    #cat4#
    if c.data == "cat4" and session.start_wait == False:
        education.teach_cat4_prewiew(bot,session,c.message)
    if c.data == "teach_cat4_start" and session.start_wait == False:
        education.teach_cat4_1(bot,session,c.message)
    if c.data == "teach_cat4_true_1" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–ù–µ —Å—Ç–∞–Ω—É –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã.  –í—Å—ë –≤–µ—Ä–Ω–æ!", parse_mode='Markdown')
        time.sleep(5)
        education.teach_cat4_2(bot, session, c.message)
        session.points_1[6]=1
    if c.data == "teach_cat4_true_2" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–í—Å—ë –≤–µ—Ä–Ω–æ!", parse_mode='Markdown')
        time.sleep(5)
        session.points_1[7] = 1
        education.iswinner(bot,session,c.message)
    if c.data == "teach_cat4_false_1" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–í–≤–µ–¥—É –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã\n–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π!\n‚ùó–≠—Ç–æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ! –ó–Ω–∞—è –≤–∞—à–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏ –ª–µ–≥–∫–æ —É–∫—Ä–∞–¥—É—Ç –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏. –í–≤–æ–¥–∏—Ç—å –∏—Ö —Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–∞—Ö –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.", parse_mode='Markdown')
        time.sleep(8)
        education.teach_cat4_2(bot, session, c.message)
        session.points_1[6] = 1
    if c.data == "teach_cat4_false_2" and session.start_wait == False:
        bot.send_message(c.message.chat.id, "–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π!\n–í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ: –µ—Å—Ç—å –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –¥–æ–º–µ–Ω –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –º–∞–≥–∞–∑–∏–Ω—É. –¢–∞–∫ —á—Ç–æ –º–æ–∂–Ω–æ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ –±–µ–∑ –ø—Ä–æ–±–ª–µ–º.", parse_mode='Markdown')
        session.points_1[7] = 1
        education.iswinner(bot, session, c.message)
    output = open('data.pkl', 'wb')
    pickle.dump(utils.sessions, output, 2)
    output.close()


@bot.message_handler(content_types=["text"])
def repeat_all_messages(message):
    try:
        session = utils.sessions[message.chat.id]
    except Exception:
        session = utils.simpleSession(message.chat.id)
        utils.sessions[message.chat.id] = session
        output = open('data.pkl', 'wb')
        pickle.dump(utils.sessions, output, 2)
        output.close()
    bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –ø–æ–Ω—è–ª —Ç–µ–±—è!\n –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /start", parse_mode='Markdown')
    output = open('data.pkl', 'wb')
    pickle.dump(utils.sessions, output, 2)
    output.close()


bot.polling(none_stop=True, interval=0)